version: 0.2

env:
  parameter-store:
    DOCKER_REGISTRY_USERNAME: /cicd/docker-credentials/username
    DOCKER_REGISTRY_PASSWORD: /cicd/docker-credentials/password
    DOCKER_REGISTRY_URL: /cicd/docker-registry/url
    SONAR_TOKEN: /cicd/sonar/sonar-token

phases:
  install:
    runtime-versions:
      python: 3.11
      java: corretto17
    commands:
      - echo "Installing Trivy..."
      - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -

      - echo "Installing SonarQube scanner..."
      - curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
      - unzip sonar-scanner.zip
      - mv sonar-scanner-* sonar-scanner
      - export PATH=$PATH:$PWD/sonar-scanner/bin

      - echo "Installing OWASP Dependency-Check..."
      - curl -L -o dependency-check.zip https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.0/dependency-check-8.4.0-release.zip
      - unzip dependency-check.zip -d dependency-check

  pre_build:
    commands:
      - echo "Running Trivy FileSystem scan..."
      - ./trivy fs node_modules --scanners vuln --exit-code 0 --format table --output trivy-scan-report.txt || true

      - echo "Running OWASP Dependency-Check..."
      - ./dependency-check/bin/dependency-check.sh --project "Swiggy Clone" --scan . --format ALL --out dependency-check-report

      - echo "Running SonarQube analysis..."
      - sonar-scanner -X -Dsonar.projectKey=swiggy -Dsonar.sources=. -Dsonar.host.url=http://13.201.12.34:9000 -Dsonar.login=$SONAR_TOKEN

  build:
    commands:
      - echo "Logging in to DockerHub..."
      - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY_URL"

      - echo "Building Docker image..."
      - docker build -t "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/swiggy:latest" .

      - echo "Pushing Docker image to DockerHub..."
      - docker push "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/swiggy:latest"

  post_build:
    commands:
      - echo "Running Trivy Image Scan..."
      - ./trivy image "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/swiggy:latest" --format table --output trivy-image-scan.txt || true

      - echo "Generating imagedefinitions.json..."
      - printf '[{"name":"swiggy","imageUri":"%s/%s/swiggy:latest"}]' $DOCKER_REGISTRY_URL $DOCKER_REGISTRY_USERNAME > imagedefinitions.json

artifacts:
  files:
    - appspec.yaml
    - imagedefinitions.json
    - trivy-scan-report.txt
    - trivy-image-scan.txt
  base-directory: dependency-check-report
