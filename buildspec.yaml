version: 0.2

env:
  parameter-store:
    DOCKER_REGISTRY_USERNAME: /cicd/docker-credentials/username
    DOCKER_REGISTRY_PASSWORD: /cicd/docker-credentials/password
    DOCKER_REGISTRY_URL: /cicd/docker-registry/url
    SONAR_TOKEN: /cicd/sonar/sonar-token

phases:
  install:
    runtime-versions:
      python: 3.11
      java: corretto17
    commands:
      - echo "Installing Trivy & SonarQube scanner..."
      - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -
      - curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
      - unzip sonar-scanner.zip
      - mv sonar-scanner-* sonar-scanner
      - echo 'export PATH=$PATH:$PWD/sonar-scanner/bin' >> ~/.bashrc
      - export PATH=$PATH:$PWD/sonar-scanner/bin
      # Optional: Install npm if not present, then Babel plugin if needed
      # - apt-get update && apt-get install -y npm
      # - npm install --save-dev @babel/plugin-proposal-private-property-in-object

  pre_build:
    commands:
      - set -e
      - echo "Updating Trivy database..."
      - ./trivy --download-db-only
      - echo "Running Trivy scan..."
      - ./trivy fs . || true  # Allow failures, do not break build
      - echo "Creating temporary Babel config..."
      - echo '{ "presets": ["react-app"], "plugins": ["@babel/plugin-proposal-private-property-in-object"] }' > babel.config.json
      - echo "Running SonarQube analysis..."
      - sonar-scanner -X -Dsonar.projectKey=swiggy -Dsonar.sources=. -Dsonar.host.url=http://13.201.12.34:9000 -Dsonar.login=$SONAR_TOKEN

  build:
    commands:
      - set -e
      - echo "Logging in to Docker registry..."
      - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY_URL"
      - echo "Building Docker image..."
      - docker build -t "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/swiggy:latest" .
      - echo "Pushing Docker image..."
      - docker push "$DOCKER_REGISTRY_URL/$DOCKER_REGISTRY_USERNAME/swiggy:latest"

  post_build:
    commands:
      - echo "Generating imagedefinitions.json..."
      - printf '[{"name":"swiggy","imageUri":"%s/%s/swiggy:latest"}]' $DOCKER_REGISTRY_URL $DOCKER_REGISTRY_USERNAME > imagedefinitions.json

artifacts:
  files:
    - appspec.yaml
    - imagedefinitions.json
